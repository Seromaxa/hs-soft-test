{"version":3,"sources":["store/apollo.js","store/context.js","components/list.js","utilts.js","App.js","reportWebVitals.js","index.js"],"names":["client","ApolloClient","cache","InMemoryCache","uri","LIST","gql","Context","createContext","List","item","useContext","open","close","className","style","width","level","onClick","opener","id","name","active","Object","keys","map","keyItem","Array","isArray","subItem","Math","random","arr","id2","changeFild","key","fild","setLevelAndActiv","setObj","obj","l","buf","activity","length","it","Date","now","makeName","str","lengthOfString","floor","i","first","second","push","String","fromCharCode","toUpperCase","join","createData","num","max","ev","child","n","App","useState","data","setData","myData","setMyData","m","depth","setdepth","dis","setDisablet","useRef","useQuery","onCompleted","modData","continents","Provider","value","ind","onSubmit","preventDefault","target","onChange","prev","current","htmlFor","ref","autoComplete","type","disabled","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","ApolloProvider","document","getElementById"],"mappings":"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","file":"static/js/main.fbc3f4a4.chunk.js","sourcesContent":["import { ApolloClient, InMemoryCache } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\n\nexport const client = new ApolloClient({\n  cache: new InMemoryCache(),\n  uri: \"https://countries.trevorblades.com/\",\n})\n\nexport const LIST = gql`\n  {\n    continents {\n      name\n      countries {\n        name\n        languages {\n          name\n        }\n      }\n    }\n  }\n`\n","import { createContext } from \"react\"\n\nexport const Context = createContext()\n","import React, { useContext } from \"react\"\nimport { Context } from \"../store/context\"\n\nconst List = ({ item }) => {\n  const { open, close } = useContext(Context)\n  const levelForWidth = 2\n  const paddingOfList = 40\n  const lastPoint = 20\n\n  return (\n    <li className=\"list-item\">\n      <div\n        className=\"gorisontal\"\n        style={{\n          width:\n            item.level < 3\n              ? item.level < 2\n                ? 0\n                : item.level * 10\n              : (item.level - levelForWidth) * paddingOfList + lastPoint,\n        }}\n      ></div>\n      <div\n        className=\"name\"\n        onClick={item.opener ? () => open(item.id) : () => close()}\n      >\n        {item.name}\n      </div>\n\n      {item.active\n        ? Object.keys(item).map((keyItem) =>\n            Array.isArray(item[keyItem]) ? (\n              <ul key={Math.random()} className=\"list\">\n                {item[keyItem].map((subItem) => {\n                  return (\n                    <List item={subItem} key={subItem.name + Math.random()} />\n                  )\n                })}\n              </ul>\n            ) : null\n          )\n        : null}\n    </li>\n  )\n}\nexport default List\n","export const open = (arr, id, id2, changeFild) => {\n  return arr.map((item) => {\n    if (item[id] === id2) {\n      item = { ...item, [changeFild]: !item[changeFild] }\n    } else {\n      Object.keys(item).map((key) => {\n        if (Array.isArray(item[key])) {\n          item[key] = open(item[key], id, id2, changeFild)\n        }\n        return item\n      })\n    }\n    return item\n  })\n}\n\nexport const close = (arr, fild) => {\n  return arr.map((item) => {\n    item = { ...item, [fild]: false }\n    for (let name in item) {\n      if (Array.isArray(item[name])) {\n        item[name] = close(item[name], fild)\n      }\n    }\n    return item\n  })\n}\n\nexport function setLevelAndActiv(item) {\n  let level = 0\n  function setObj(obj, l) {\n    l++\n    let buf = { ...obj }\n    let activity = false\n    for (let name in buf) {\n      if (Array.isArray(buf[name])) {\n        if (buf[name].length) {\n          activity = true\n        }\n        buf[name] = buf[name].map((it) => setObj(it, l))\n      }\n    }\n    return {\n      ...buf,\n      level: l,\n      opener: activity,\n      active: false,\n      id: Date.now() + Math.random() + buf.name,\n    }\n  }\n\n  item = setObj(item, level)\n  return item\n}\n\nconst makeName = () => {\n  let str = []\n  let lengthOfString = Math.floor(Math.random() * (10 - 3) + 3)\n\n  for (let i = 0; i < lengthOfString; i++) {\n    let first = Math.floor(Math.random() * (45 - 43) + 43)\n    let second = Math.floor(Math.random() * 16)\n    if (second > 9) {\n      switch (second) {\n        case 10:\n          second = \"A\"\n          break\n        case 11:\n          second = \"B\"\n          break\n        case 12:\n          second = \"C\"\n          break\n        case 13:\n          second = \"D\"\n          break\n        case 14:\n          second = \"E\"\n          break\n        case 15:\n          second = \"F\"\n          break\n        default:\n          second = 1\n      }\n    }\n\n    str.push(String.fromCharCode(`0x${first}${second}`))\n  }\n  str[0] = str[0].toUpperCase()\n  return str.join(\"\")\n}\n\nexport function createData(num, arr, max, ev) {\n  if (ev) {\n    arr = arr.map((item) => {\n      if (item.level >= +max) {\n        return item\n      } else {\n        if (item.id === ev) {\n          if (item.child.length > 0) {\n            item = { ...item, active: !item.active }\n          } else {\n            for (let i = 0; i < num; i++) {\n              let n = makeName()\n              let obj = {\n                id: `${n}${Math.random()}`,\n                name: n,\n                active: false,\n                level: item.level + 1,\n                opener: item.level + 1 === +max ? false : true,\n                child: [],\n              }\n              item.child.push(obj)\n            }\n            item = { ...item, active: !item.active }\n          }\n        } else {\n          item.child = createData(num, item.child, max, ev)\n        }\n      }\n      return item\n    })\n  } else {\n    for (let i = 0; i < num; i++) {\n      let n = makeName()\n      let obj = {\n        id: `${n}${Math.random()}`,\n        name: n,\n        active: false,\n        level: 1,\n        opener: true,\n        child: [],\n      }\n      arr.push(obj)\n    }\n  }\n  return arr\n}\n","import { useState, useRef } from \"react\"\nimport \"./App.css\"\nimport { LIST } from \"./store/apollo\"\nimport { useQuery } from \"@apollo/client\"\nimport List from \"./components/list\"\nimport { Context } from \"./store/context\"\nimport { open, close, setLevelAndActiv, createData } from \"./utilts\"\n\nfunction App() {\n  const [data, setData] = useState([])\n  const [myData, setMyData] = useState([])\n  const [depth, setdepth] = useState({ m: 0, n: 0 })\n  const [dis, setDisablet] = useState(false)\n  const m = useRef(null)\n  const n = useRef(null)\n\n  useQuery(LIST, {\n    onCompleted: norm,\n  })\n\n  function norm(data) {\n    let modData = [...data.continents]\n    modData = modData.map(setLevelAndActiv)\n    setData(modData)\n  }\n\n  const openHendler = (ev) => {\n    setData(open(data, \"id\", ev, \"active\"))\n  }\n  const closeHendler = () => {\n    setData(close(data, \"active\"))\n  }\n  const submitHandler = (ev) => {\n    ev.preventDefault()\n    let m = +ev.target.m.value\n    let n = +ev.target.n.value\n    ev.target.m.value = null\n    ev.target.n.value = null\n    setDisablet(false)\n    setMyData(createData(m, [], n))\n  }\n  const openForMyData = (ev) => {\n    setMyData(createData(depth.m, myData, depth.n, ev))\n  }\n  const closeForMyData = () => {\n    setMyData(close(myData, \"active\"))\n  }\n  const typeControl = (ev) => {\n    if (!+ev.target.value) {\n      ev.target.value = null\n    }\n    setdepth((prev) => {\n      return {\n        ...prev,\n        [ev.target.name]: +ev.target.value,\n      }\n    })\n    !!m.current.value && !!n.current.value\n      ? setDisablet(true)\n      : setDisablet(false)\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"wrapper\">\n        <Context.Provider value={{ open: openHendler, close: closeHendler }}>\n          <ul className=\"wrapper-list\">\n            {data\n              ? data.map((item, ind) => (\n                  <List item={item} key={Math.random() + item.name + ind} />\n                ))\n              : null}\n          </ul>\n        </Context.Provider>\n      </div>\n      <div className=\"form_wrapper\">\n        <form onSubmit={submitHandler} onChange={typeControl}>\n          <div className=\"input_wrapper\">\n            <label htmlFor=\"m1\">Number of children in each node</label>\n            <input id=\"m1\" ref={m} name=\"m\" autoComplete=\"off\" />\n          </div>\n          <div className=\"input_wrapper\">\n            <label htmlFor=\"n1\">Depth of tree</label>\n            <input id=\"n1\" name=\"n\" ref={n} autoComplete=\"off\" />\n          </div>\n\n          {dis ? (\n            <button className=\"sub_button\" type=\"submit\">\n              Click\n            </button>\n          ) : (\n            <button className=\"sub_button\" type=\"submit\" disabled>\n              Click\n            </button>\n          )}\n        </form>\n      </div>\n\n      <div className=\"wrapper\">\n        <Context.Provider\n          value={{ open: openForMyData, close: closeForMyData }}\n        >\n          <ul className=\"wrapper-list\">\n            {myData\n              ? myData.map((item, ind) => (\n                  <List item={item} key={Math.random() + item.name + ind} />\n                ))\n              : null}\n          </ul>\n        </Context.Provider>\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./App\"\nimport reportWebVitals from \"./reportWebVitals\"\nimport { ApolloProvider } from \"@apollo/client\"\nimport { client } from \"./store/apollo\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <ApolloProvider client={client}>\n      <App />\n    </ApolloProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}